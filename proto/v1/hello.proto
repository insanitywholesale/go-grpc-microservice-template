syntax = "proto3";

package hello.v1;
option go_package = "gitlab.com/insanitywholesale/go-grpc-microservice-template/proto/v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Hello";
        version: "0.0.1";
        contact: {
            name: "inherently";
            url: "https://inherently.xyz";
            email: "pepitsizous@zoho.com";
        };
        license: {
            name: "AGPLv3";
            url: "https://gitlab.com/insanitywholesale/go-grpc-microservice-template/-/blob/main/LICENSE";
        };
    };

    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
};

service HelloService {
	rpc SayHello(Empty) returns (HelloResponse) {
		option (google.api.http) = {
			get: "/api/v1/hello"
		};
	};
	rpc SayCustomHello(HelloRequest) returns (HelloResponse) {
		option (google.api.http) = {
			get: "/api/v1/hello/{custom_word}"
		};
	};
};

message HelloRequest {
	string custom_word = 1;
};

message HelloResponse {
	string hello_word = 1;
};

message Empty {};
